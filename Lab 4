{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "203d5459",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Load the data from GitHub\n",
    "url = \"https://raw.githubusercontent.com/Isai-VB/E11_Twins/main/pm25_data.csv\"  # Update with the correct URL\n",
    "df = pd.read_csv(url, skiprows=1)  # Skip metadata line\n",
    "\n",
    "\n",
    "# Plot histogram for PM2.5 (standard)\n",
    "plt.figure(figsize=(10, 5))\n",
    "plt.hist(df[\"PM2.5 (standard)\"], bins=[0, 1, 2, 3])\n",
    "plt.xticks([0, 1, 2])\n",
    "plt.xlabel(\"PM2.5 Concentration (standard)\")\n",
    "plt.ylabel(\"Frequency\")\n",
    "plt.title(\"Histogram of PM2.5 Concentrations\")\n",
    "plt.grid(axis='y', linestyle='--', alpha= 1)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "6ea5bebc",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = pd.read_csv(url)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "91d7098c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>PM2.5 Sensor Data Log - Captured Readings with Timestamps</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Timestamp</th>\n",
       "      <th>PM1.0 (standard)</th>\n",
       "      <th>PM2.5 (standard)</th>\n",
       "      <th>PM10 (standard)</th>\n",
       "      <th>PM1.0 (env)</th>\n",
       "      <th>PM2.5 (env)</th>\n",
       "      <th>PM10 (env)</th>\n",
       "      <th>Particles &gt;0.3um</th>\n",
       "      <th>Particles &gt;0.5um</th>\n",
       "      <th>Particles &gt;1.0um</th>\n",
       "      <th>Particles &gt;2.5um</th>\n",
       "      <th>Particles &gt;5.0um</th>\n",
       "      <td>Particles &gt;10um</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2025-02-14 15:18:24</th>\n",
       "      <th>1</th>\n",
       "      <th>1</th>\n",
       "      <th>1</th>\n",
       "      <th>1</th>\n",
       "      <th>1</th>\n",
       "      <th>1</th>\n",
       "      <th>270</th>\n",
       "      <th>74</th>\n",
       "      <th>19</th>\n",
       "      <th>1</th>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2025-02-14 15:18:25</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>2</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>2</th>\n",
       "      <th>315</th>\n",
       "      <th>85</th>\n",
       "      <th>21</th>\n",
       "      <th>1</th>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2025-02-14 15:18:26</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>2</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>2</th>\n",
       "      <th>315</th>\n",
       "      <th>85</th>\n",
       "      <th>21</th>\n",
       "      <th>1</th>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2025-02-14 15:18:27</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>2</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>2</th>\n",
       "      <th>315</th>\n",
       "      <th>85</th>\n",
       "      <th>21</th>\n",
       "      <th>1</th>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2025-02-14 15:19:19</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>309</th>\n",
       "      <th>96</th>\n",
       "      <th>19</th>\n",
       "      <th>4</th>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2025-02-14 15:19:20</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>309</th>\n",
       "      <th>96</th>\n",
       "      <th>19</th>\n",
       "      <th>4</th>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2025-02-14 15:19:21</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>309</th>\n",
       "      <th>96</th>\n",
       "      <th>19</th>\n",
       "      <th>4</th>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2025-02-14 15:19:22</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>396</th>\n",
       "      <th>106</th>\n",
       "      <th>17</th>\n",
       "      <th>3</th>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2025-02-14 15:19:23</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>396</th>\n",
       "      <th>106</th>\n",
       "      <th>17</th>\n",
       "      <th>3</th>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>61 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                                                                                                                                              PM2.5 Sensor Data Log - Captured Readings with Timestamps\n",
       "Timestamp           PM1.0 (standard) PM2.5 (standard) PM10 (standard) PM1.0 (env) PM2.5 (env) PM10 (env) Particles >0.3um Particles >0.5um Particles >1.0um Particles >2.5um Particles >5.0um                                    Particles >10um       \n",
       "2025-02-14 15:18:24 1                1                1               1           1           1          270              74               19               1                0                                                                 0       \n",
       "2025-02-14 15:18:25 1                2                2               1           2           2          315              85               21               1                0                                                                 0       \n",
       "2025-02-14 15:18:26 1                2                2               1           2           2          315              85               21               1                0                                                                 0       \n",
       "2025-02-14 15:18:27 1                2                2               1           2           2          315              85               21               1                0                                                                 0       \n",
       "...                                                                                                                                                                                                                                          ...       \n",
       "2025-02-14 15:19:19 0                1                2               0           1           2          309              96               19               4                1                                                                 0       \n",
       "2025-02-14 15:19:20 0                1                2               0           1           2          309              96               19               4                1                                                                 0       \n",
       "2025-02-14 15:19:21 0                1                2               0           1           2          309              96               19               4                1                                                                 0       \n",
       "2025-02-14 15:19:22 0                1                2               0           1           2          396              106              17               3                0                                                                 0       \n",
       "2025-02-14 15:19:23 0                1                2               0           1           2          396              106              17               3                0                                                                 0       \n",
       "\n",
       "[61 rows x 1 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "d372a2f1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['PM2.5 Sensor Data Log - Captured Readings with Timestamps'], dtype='object')\n"
     ]
    }
   ],
   "source": [
    "print(data.columns\n",
    "     )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fa3cad05",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
